from steembase import transactions
from graphenebase.account import PrivateKey, PublicKey, Address
import random
import unittest
from pprint import pprint
from binascii import hexlify

wif              = "5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"
ref_block_num    = 34294
ref_block_prefix = 3707022213
expiration       = "2016-04-06T08:29:27"


class Testcases(unittest.TestCase) :

    def __init__(self, *args, **kwargs):
        super(Testcases, self).__init__(*args, **kwargs)
        self.maxDiff = None

    def test_Comment(self):
        op = transactions.Comment(
            **{"parent_author": "foobara",
               "parent_permlink": "foobarb",
               "author": "foobarc",
               "permlink": "foobard",
               "title": "foobare",
               "body": "foobarf",
               "json_metadata": {"foo": "bar"}}
        )
        ops    = [transactions.Operation(op)]
        tx     = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c80457010107666f6f6261726107666f6f626172620"
                   "7666f6f6261726307666f6f6261726407666f6f6261726507666f6f62"
                   "6172660e7b22666f6f223a2022626172227d00011f34a882f3b06894c"
                   "29f52e06b8a28187b84b817c0e40f124859970b32511a778736d682f2"
                   "4d3a6e6da124b340668d25bbcf85ffa23ca622b307ffe10cf182bb82")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_Vote(self):
        op = transactions.Vote(
            **{"voter": "foobara",
               "author": "foobarc",
               "permlink": "foobard",
               "weight": 1000}
        )
        ops    = [transactions.Operation(op)]
        tx     = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        tx.verify([PrivateKey(wif).pubkey])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c80457010007666f6f6261726107666f6f62617263"
                   "07666f6f62617264e8030001202e09123f732a438ef6d6138484d7ad"
                   "edfdcf4a4f3d171f7fcafe836efa2a3c8877290bd34c67eded824ac0"
                   "cc39e33d154d0617f64af936a83c442f62aef08fec")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_create_account(self):
        op = transactions.Account_create(
            **{'creator': 'xeroc',
               'fee': '10.000 STEEM',
               'json_metadata': '',
               'memo_key': 'STM6zLNtyFVToBsBZDsgMhgjpwysYVbsQD6YhP3kRkQhANUB4w7Qp',
               'new_account_name': 'fsafaasf',
               'owner': {'account_auths': [],
                         'key_auths': [['STM5jYVokmZHdEpwo5oCG3ES2Ca4VYzy6tM8pWWkGdgVnwo2mFLFq',
                                        1], [
                                       'STM6zLNtyFVToBsBZDsgMhgjpwysYVbsQD6YhP3kRkQhANUB4w7Qp',
                                       1]],
                         'weight_threshold': 1},
               'active': {'account_auths': [],
                          'key_auths': [['STM6pbVDAjRFiw6fkiKYCrkz7PFeL7XNAfefrsREwg8MKpJ9VYV9x',
                                        1], [
                                        'STM6zLNtyFVToBsBZDsgMhgjpwysYVbsQD6YhP3kRkQhANUB4w7Qp',
                                        1]],
                          'weight_threshold': 1},
               'posting': {'account_auths': [],
                           'key_auths': [['STM8CemMDjdUWSV5wKotEimhK6c4dY7p2PdzC2qM1HpAP8aLtZfE7',
                                          1], [
                                         'STM6zLNtyFVToBsBZDsgMhgjpwysYVbsQD6YhP3kRkQhANUB4w7Qp',
                                         1], [
                                         'STM6pbVDAjRFiw6fkiKYCrkz7PFeL7XNAfefrsREwg8MKpJ9VYV9x',
                                         1
                                         ]],
                           'weight_threshold': 1}}
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c804570109102700000000000003535445454d000"
                   "0057865726f63086673616661617366010000000002026f6231b8ed"
                   "1c5e964b42967759757f8bb879d68e7b09d9ea6eedec21de6fa4c40"
                   "1000314aa202c9158990b3ec51a1aa49b2ab5d300c97b391df3beb3"
                   "4bb74f3c62699e010001000000000202fe8cc11cc8251de6977636b"
                   "55c1ab8a9d12b0b26154ac78e56e7c4257d8bcf6901000314aa202c"
                   "9158990b3ec51a1aa49b2ab5d300c97b391df3beb34bb74f3c62699"
                   "e010001000000000302fe8cc11cc8251de6977636b55c1ab8a9d12b"
                   "0b26154ac78e56e7c4257d8bcf6901000314aa202c9158990b3ec51"
                   "a1aa49b2ab5d300c97b391df3beb34bb74f3c62699e010003b453f4"
                   "6013fdbccb90b09ba169c388c34d84454a3b9fbec68d5a7819a734f"
                   "ca001000314aa202c9158990b3ec51a1aa49b2ab5d300c97b391df3"
                   "beb34bb74f3c62699e0000012031827ea70b06e413d124d14ed8db3"
                   "99597fa5f94566e031b706533a9090395be1c0ed317c8af01d12ca7"
                   "9258ac4d800adff92a84630b567e5ff48cd4b5f716d6")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_Transfer(self):
        op = transactions.Transfer(
            **{"from": "foo",
               "to": "baar",
               "amount": "111.110 STEEM",
               "memo": "Fooo"
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c80457010203666f6f046261617206b201000000"
                   "000003535445454d000004466f6f6f00012025416c234dd5ff15d8"
                   "b45486833443c128002bcafa57269cada3ad213ef88adb5831f63a"
                   "58d8b81bbdd92d494da01eeb13ee1786d02ce075228b25d7132f8f"
                   "3e")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_Transfer_to_vesting(self):
        op = transactions.Transfer_to_vesting(
            **{"from": "foo",
               "to": "baar",
               "amount": "111.110 STEEM",
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c80457010303666f6f046261617206b201000000"
                   "000003535445454d00000001203a34cd45fb4a2585514614be2c1"
                   "ba2365257ce5470d20c6c6abda39204eeba0b7e057d889ca8b1b1"
                   "406f1441520a25d32df2ab9fdb532c3377dc66d0fe41bb3d")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_withdraw_vesting(self):
        op = transactions.Transfer_to_vesting(
            **{"from": "foo",
               "to": "baar",
               "amount": "111.110 STEEM",
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")

        compare = ("f68585abf4dce7c80457010303666f6f046261617206b2010000000"
                   "00003535445454d00000001203a34cd45fb4a2585514614be2c1ba"
                   "2365257ce5470d20c6c6abda39204eeba0b7e057d889ca8b1b1406"
                   "f1441520a25d32df2ab9fdb532c3377dc66d0fe41bb3d")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_order_create(self):
        op = transactions.Limit_order_create(
            **{"owner": "",
               "orderid": 0,
               "amount_to_sell": "0.000 STEEM",
               "min_to_receive": "0.000 STEEM",
               "fill_or_kill": False,
               "expiration": "2016-12-31T23:59:59"
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c8045701050000000000000000000000000003535"
                   "445454d0000000000000000000003535445454d0000007f46685800"
                   "011f28a2fc52dcfc19378c5977917b158dfab93e7760259aab7ecdb"
                   "cb82df7b22e1a5527e02fd3aab7d64302ec550c3edcbba29d73226c"
                   "f088273e4fafda89eb7de8")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_account_update(self):
        op = transactions.Account_update(
            **{"account": "streemian",
                "posting": {
                    "weight_threshold": 1,
                    "account_auths": [["xeroc", 1], ["fabian", 1]],
                    "key_auths": [["STM6KChDK2sns9MwugxkoRvPEnyjuTxHN5upGsZ1EtanCffqBVVX3", 1],
                                  ["STM7sw22HqsXbz7D2CmJfmMwt9rimtk518dRzsR1f8Cgw52dQR1pR", 1]]
                },
                "owner": {
                    "weight_threshold": 1,
                    "account_auths": [],
                    "key_auths": [["STM7sw22HqsXbz7D2CmJfmMwt9rimtk518dRzsR1f8Cgw52dQR1pR", 1],
                                  ["STM6KChDK2sns9MwugxkoRvPEnyjuTxHN5upGsZ1EtanCffqBVVX3", 1]]
                },
                "active": {
                    "weight_threshold": 2,
                    "account_auths": [],
                    "key_auths": [["STM6KChDK2sns9MwugxkoRvPEnyjuTxHN5upGsZ1EtanCffqBVVX3", 1],
                                  ["STM7sw22HqsXbz7D2CmJfmMwt9rimtk518dRzsR1f8Cgw52dQR1pR", 1]]
                },
                "memo_key": "STM728uLvStTeAkYJsQefks3FX8yfmpFHp8wXw3RY3kwey2JGDooR",
                "json_metadata": ""}
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c80457010a0973747265656d69616e01010000"
                   "00000202bbcf38855c9ae9d55704ee50ff56552af1242266c105"
                   "44a75b61005e17fa78a601000389d28937022880a7f0c7deaa6f"
                   "46b4d87ce08bd5149335cb39b5a8e9b04981c201000102000000"
                   "000202bbcf38855c9ae9d55704ee50ff56552af1242266c10544"
                   "a75b61005e17fa78a601000389d28937022880a7f0c7deaa6f46"
                   "b4d87ce08bd5149335cb39b5a8e9b04981c20100010100000002"
                   "0666616269616e0100057865726f6301000202bbcf38855c9ae9"
                   "d55704ee50ff56552af1242266c10544a75b61005e17fa78a601"
                   "000389d28937022880a7f0c7deaa6f46b4d87ce08bd5149335cb"
                   "39b5a8e9b04981c201000318c1ae46b3e98b26684c87737a04ec"
                   "b1a390efdc7671ced448a92b745372deff000001206a8896c0ce"
                   "0c949d901c44232694252348004cf9a74ec2f391c0e0b7a4108e"
                   "7f71522c186a92c17e23a07cdb108a745b9760316daf16f20434"
                   "53fbeccb331067")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_order_cancel(self):
        op = transactions.Limit_order_cancel(
            **{"owner": "",
               "orderid": 2141244,
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c804570106003cac20000001206c9888d0c2c3"
                   "1dba1302566f524dfac01a15760b93a8726241a7ae6ba00edfd"
                   "e5b83edaf94a4bd35c2957ded6023576dcbe936338fb9d340e2"
                   "1b5dad6f0028f6")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_set_route(self):
        op = transactions.Set_withdraw_vesting_route(
            **{"from_account": "xeroc",
               "to_account": "xeroc",
               "percent": 1000,
               "auto_vest": False
               }
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c804570114057865726f63057865726f63e803"
                   "0000011f12d2b8f93f9528f31979e0e1f59a6d45346a88c02ab2"
                   "c4115b10c9e273fc1e99621af0c2188598c84762b7e99ca63f6b"
                   "6be6fca318dd85b0d7a4f09f95579290")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_convert(self):
        op = transactions.Convert(
            **{"owner": "xeroc",
               "requestid": 2342343235,
               "amount": "100.000 SBD"}
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c804570108057865726f6343529d8ba0860100000"
                   "00000035342440000000000011f3d22eb66e5cddcc90f5d6ca0bd7a"
                   "43e0ab811ecd480022af8a847c45eac720b342188d55643d8cb1711"
                   "f516e9879be2fa7dfa329b518f19df4afaaf4f41f7715")
        self.assertEqual(compare[:-130], txWire[:-130])

    def test_utf8tests(self):
        op = transactions.Comment(
            **{"parent_author": "",
               "parent_permlink": "",
               "author": "a",
               "permlink": "a",
               "title": "-",
               "body": "".join([chr(i) for i in range(0, 2048)]),
               "json_metadata": {}}
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])

        txWire = hexlify(bytes(tx)).decode("ascii")
        compare = ("f68585abf4dce7c804570101000001610161012df04c75303030307"
                   "5303030317530303032753030303375303030347530303035753030"
                   "3036753030303762090a7530303062660d753030306575303030667"
                   "5303031307530303131753030313275303031337530303134753030"
                   "3135753030313675303031377530303138753030313975303031617"
                   "5303031627530303163753030316475303031657530303166202122"
                   "232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3"
                   "e3f404142434445464748494a4b4c4d4e4f50515253545556575859"
                   "5a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717273747"
                   "5767778797a7b7c7d7e753030376675303038307530303831753030"
                   "3832753030383375303038347530303835753030383675303038377"
                   "5303038387530303839753030386175303038627530303863753030"
                   "3864753030386575303038667530303930753030393175303039327"
                   "5303039337530303934753030393575303039367530303937753030"
                   "3938753030393975303039617530303962753030396375303039647"
                   "5303039657530303966753030613075303061317530306132753030"
                   "6133753030613475303061357530306136753030613775303061387"
                   "5303061397530306161753030616275303061637530306164753030"
                   "6165753030616675303062307530306231753030623275303062337"
                   "5303062347530306235753030623675303062377530306238753030"
                   "6239753030626175303062627530306263753030626475303062657"
                   "5303062667530306330753030633175303063327530306333753030"
                   "6334753030633575303063367530306337753030633875303063397"
                   "5303063617530306362753030636375303063647530306365753030"
                   "6366753030643075303064317530306432753030643375303064347"
                   "5303064357530306436753030643775303064387530306439753030"
                   "6461753030646275303064637530306464753030646575303064667"
                   "5303065307530306531753030653275303065337530306534753030"
                   "6535753030653675303065377530306538753030653975303065617"
                   "5303065627530306563753030656475303065657530306566753030"
                   "6630753030663175303066327530306633753030663475303066357"
                   "5303066367530306637753030663875303066397530306661753030"
                   "6662753030666375303066647530306665753030666675303130307"
                   "5303130317530313032753031303375303130347530313035753031"
                   "3036753031303775303130387530313039753031306175303130627"
                   "5303130637530313064753031306575303130667530313130753031"
                   "3131753031313275303131337530313134753031313575303131367"
                   "5303131377530313138753031313975303131617530313162753031"
                   "3163753031316475303131657530313166753031323075303132317"
                   "5303132327530313233753031323475303132357530313236753031"
                   "3237753031323875303132397530313261753031326275303132637"
                   "5303132647530313265753031326675303133307530313331753031"
                   "3332753031333375303133347530313335753031333675303133377"
                   "5303133387530313339753031336175303133627530313363753031"
                   "3364753031336575303133667530313430753031343175303134327"
                   "5303134337530313434753031343575303134367530313437753031"
                   "3438753031343975303134617530313462753031346375303134647"
                   "5303134657530313466753031353075303135317530313532753031"
                   "3533753031353475303135357530313536753031353775303135387"
                   "5303135397530313561753031356275303135637530313564753031"
                   "3565753031356675303136307530313631753031363275303136337"
                   "5303136347530313635753031363675303136377530313638753031"
                   "3639753031366175303136627530313663753031366475303136657"
                   "5303136667530313730753031373175303137327530313733753031"
                   "3734753031373575303137367530313737753031373875303137397"
                   "5303137617530313762753031376375303137647530313765753031"
                   "3766753031383075303138317530313832753031383375303138347"
                   "5303138357530313836753031383775303138387530313839753031"
                   "3861753031386275303138637530313864753031386575303138667"
                   "5303139307530313931753031393275303139337530313934753031"
                   "3935753031393675303139377530313938753031393975303139617"
                   "5303139627530313963753031396475303139657530313966753031"
                   "6130753031613175303161327530316133753031613475303161357"
                   "5303161367530316137753031613875303161397530316161753031"
                   "6162753031616375303161647530316165753031616675303162307"
                   "5303162317530316232753031623375303162347530316235753031"
                   "6236753031623775303162387530316239753031626175303162627"
                   "5303162637530316264753031626575303162667530316330753031"
                   "6331753031633275303163337530316334753031633575303163367"
                   "5303163377530316338753031633975303163617530316362753031"
                   "6363753031636475303163657530316366753031643075303164317"
                   "5303164327530316433753031643475303164357530316436753031"
                   "6437753031643875303164397530316461753031646275303164637"
                   "5303164647530316465753031646675303165307530316531753031"
                   "6532753031653375303165347530316535753031653675303165377"
                   "5303165387530316539753031656175303165627530316563753031"
                   "6564753031656575303165667530316630753031663175303166327"
                   "5303166337530316634753031663575303166367530316637753031"
                   "6638753031663975303166617530316662753031666375303166647"
                   "5303166657530316666753032303075303230317530323032753032"
                   "3033753032303475303230357530323036753032303775303230387"
                   "5303230397530323061753032306275303230637530323064753032"
                   "3065753032306675303231307530323131753032313275303231337"
                   "5303231347530323135753032313675303231377530323138753032"
                   "3139753032316175303231627530323163753032316475303231657"
                   "5303231667530323230753032323175303232327530323233753032"
                   "3234753032323575303232367530323237753032323875303232397"
                   "5303232617530323262753032326375303232647530323265753032"
                   "3266753032333075303233317530323332753032333375303233347"
                   "5303233357530323336753032333775303233387530323339753032"
                   "3361753032336275303233637530323364753032336575303233667"
                   "5303234307530323431753032343275303234337530323434753032"
                   "3435753032343675303234377530323438753032343975303234617"
                   "5303234627530323463753032346475303234657530323466753032"
                   "3530753032353175303235327530323533753032353475303235357"
                   "5303235367530323537753032353875303235397530323561753032"
                   "3562753032356375303235647530323565753032356675303236307"
                   "5303236317530323632753032363375303236347530323635753032"
                   "3636753032363775303236387530323639753032366175303236627"
                   "5303236637530323664753032366575303236667530323730753032"
                   "3731753032373275303237337530323734753032373575303237367"
                   "5303237377530323738753032373975303237617530323762753032"
                   "3763753032376475303237657530323766753032383075303238317"
                   "5303238327530323833753032383475303238357530323836753032"
                   "3837753032383875303238397530323861753032386275303238637"
                   "5303238647530323865753032386675303239307530323931753032"
                   "3932753032393375303239347530323935753032393675303239377"
                   "5303239387530323939753032396175303239627530323963753032"
                   "3964753032396575303239667530326130753032613175303261327"
                   "5303261337530326134753032613575303261367530326137753032"
                   "6138753032613975303261617530326162753032616375303261647"
                   "5303261657530326166753032623075303262317530326232753032"
                   "6233753032623475303262357530326236753032623775303262387"
                   "5303262397530326261753032626275303262637530326264753032"
                   "6265753032626675303263307530326331753032633275303263337"
                   "5303263347530326335753032633675303263377530326338753032"
                   "6339753032636175303263627530326363753032636475303263657"
                   "5303263667530326430753032643175303264327530326433753032"
                   "6434753032643575303264367530326437753032643875303264397"
                   "5303264617530326462753032646375303264647530326465753032"
                   "6466753032653075303265317530326532753032653375303265347"
                   "5303265357530326536753032653775303265387530326539753032"
                   "6561753032656275303265637530326564753032656575303265667"
                   "5303266307530326631753032663275303266337530326634753032"
                   "6635753032663675303266377530326638753032663975303266617"
                   "5303266627530326663753032666475303266657530326666753033"
                   "3030753033303175303330327530333033753033303475303330357"
                   "5303330367530333037753033303875303330397530333061753033"
                   "3062753033306375303330647530333065753033306675303331307"
                   "5303331317530333132753033313375303331347530333135753033"
                   "3136753033313775303331387530333139753033316175303331627"
                   "5303331637530333164753033316575303331667530333230753033"
                   "3231753033323275303332337530333234753033323575303332367"
                   "5303332377530333238753033323975303332617530333262753033"
                   "3263753033326475303332657530333266753033333075303333317"
                   "5303333327530333333753033333475303333357530333336753033"
                   "3337753033333875303333397530333361753033336275303333637"
                   "5303333647530333365753033336675303334307530333431753033"
                   "3432753033343375303334347530333435753033343675303334377"
                   "5303334387530333439753033346175303334627530333463753033"
                   "3464753033346575303334667530333530753033353175303335327"
                   "5303335337530333534753033353575303335367530333537753033"
                   "3538753033353975303335617530333562753033356375303335647"
                   "5303335657530333566753033363075303336317530333632753033"
                   "3633753033363475303336357530333636753033363775303336387"
                   "5303336397530333661753033366275303336637530333664753033"
                   "3665753033366675303337307530333731753033373275303337337"
                   "5303337347530333735753033373675303337377530333738753033"
                   "3739753033376175303337627530333763753033376475303337657"
                   "5303337667530333830753033383175303338327530333833753033"
                   "3834753033383575303338367530333837753033383875303338397"
                   "5303338617530333862753033386375303338647530333865753033"
                   "3866753033393075303339317530333932753033393375303339347"
                   "5303339357530333936753033393775303339387530333939753033"
                   "3961753033396275303339637530333964753033396575303339667"
                   "5303361307530336131753033613275303361337530336134753033"
                   "6135753033613675303361377530336138753033613975303361617"
                   "5303361627530336163753033616475303361657530336166753033"
                   "6230753033623175303362327530336233753033623475303362357"
                   "5303362367530336237753033623875303362397530336261753033"
                   "6262753033626375303362647530336265753033626675303363307"
                   "5303363317530336332753033633375303363347530336335753033"
                   "6336753033633775303363387530336339753033636175303363627"
                   "5303363637530336364753033636575303363667530336430753033"
                   "6431753033643275303364337530336434753033643575303364367"
                   "5303364377530336438753033643975303364617530336462753033"
                   "6463753033646475303364657530336466753033653075303365317"
                   "5303365327530336533753033653475303365357530336536753033"
                   "6537753033653875303365397530336561753033656275303365637"
                   "5303365647530336565753033656675303366307530336631753033"
                   "6632753033663375303366347530336635753033663675303366377"
                   "5303366387530336639753033666175303366627530336663753033"
                   "6664753033666575303366667530343030753034303175303430327"
                   "5303430337530343034753034303575303430367530343037753034"
                   "3038753034303975303430617530343062753034306375303430647"
                   "5303430657530343066753034313075303431317530343132753034"
                   "3133753034313475303431357530343136753034313775303431387"
                   "5303431397530343161753034316275303431637530343164753034"
                   "3165753034316675303432307530343231753034323275303432337"
                   "5303432347530343235753034323675303432377530343238753034"
                   "3239753034326175303432627530343263753034326475303432657"
                   "5303432667530343330753034333175303433327530343333753034"
                   "3334753034333575303433367530343337753034333875303433397"
                   "5303433617530343362753034336375303433647530343365753034"
                   "3366753034343075303434317530343432753034343375303434347"
                   "5303434357530343436753034343775303434387530343439753034"
                   "3461753034346275303434637530343464753034346575303434667"
                   "5303435307530343531753034353275303435337530343534753034"
                   "3535753034353675303435377530343538753034353975303435617"
                   "5303435627530343563753034356475303435657530343566753034"
                   "3630753034363175303436327530343633753034363475303436357"
                   "5303436367530343637753034363875303436397530343661753034"
                   "3662753034366375303436647530343665753034366675303437307"
                   "5303437317530343732753034373375303437347530343735753034"
                   "3736753034373775303437387530343739753034376175303437627"
                   "5303437637530343764753034376575303437667530343830753034"
                   "3831753034383275303438337530343834753034383575303438367"
                   "5303438377530343838753034383975303438617530343862753034"
                   "3863753034386475303438657530343866753034393075303439317"
                   "5303439327530343933753034393475303439357530343936753034"
                   "3937753034393875303439397530343961753034396275303439637"
                   "5303439647530343965753034396675303461307530346131753034"
                   "6132753034613375303461347530346135753034613675303461377"
                   "5303461387530346139753034616175303461627530346163753034"
                   "6164753034616575303461667530346230753034623175303462327"
                   "5303462337530346234753034623575303462367530346237753034"
                   "6238753034623975303462617530346262753034626375303462647"
                   "5303462657530346266753034633075303463317530346332753034"
                   "6333753034633475303463357530346336753034633775303463387"
                   "5303463397530346361753034636275303463637530346364753034"
                   "6365753034636675303464307530346431753034643275303464337"
                   "5303464347530346435753034643675303464377530346438753034"
                   "6439753034646175303464627530346463753034646475303464657"
                   "5303464667530346530753034653175303465327530346533753034"
                   "6534753034653575303465367530346537753034653875303465397"
                   "5303465617530346562753034656375303465647530346565753034"
                   "6566753034663075303466317530346632753034663375303466347"
                   "5303466357530346636753034663775303466387530346639753034"
                   "6661753034666275303466637530346664753034666575303466667"
                   "5303530307530353031753035303275303530337530353034753035"
                   "3035753035303675303530377530353038753035303975303530617"
                   "5303530627530353063753035306475303530657530353066753035"
                   "3130753035313175303531327530353133753035313475303531357"
                   "5303531367530353137753035313875303531397530353161753035"
                   "3162753035316375303531647530353165753035316675303532307"
                   "5303532317530353232753035323375303532347530353235753035"
                   "3236753035323775303532387530353239753035326175303532627"
                   "5303532637530353264753035326575303532667530353330753035"
                   "3331753035333275303533337530353334753035333575303533367"
                   "5303533377530353338753035333975303533617530353362753035"
                   "3363753035336475303533657530353366753035343075303534317"
                   "5303534327530353433753035343475303534357530353436753035"
                   "3437753035343875303534397530353461753035346275303534637"
                   "5303534647530353465753035346675303535307530353531753035"
                   "3532753035353375303535347530353535753035353675303535377"
                   "5303535387530353539753035356175303535627530353563753035"
                   "3564753035356575303535667530353630753035363175303536327"
                   "5303536337530353634753035363575303536367530353637753035"
                   "3638753035363975303536617530353662753035366375303536647"
                   "5303536657530353666753035373075303537317530353732753035"
                   "3733753035373475303537357530353736753035373775303537387"
                   "5303537397530353761753035376275303537637530353764753035"
                   "3765753035376675303538307530353831753035383275303538337"
                   "5303538347530353835753035383675303538377530353838753035"
                   "3839753035386175303538627530353863753035386475303538657"
                   "5303538667530353930753035393175303539327530353933753035"
                   "3934753035393575303539367530353937753035393875303539397"
                   "5303539617530353962753035396375303539647530353965753035"
                   "3966753035613075303561317530356132753035613375303561347"
                   "5303561357530356136753035613775303561387530356139753035"
                   "6161753035616275303561637530356164753035616575303561667"
                   "5303562307530356231753035623275303562337530356234753035"
                   "6235753035623675303562377530356238753035623975303562617"
                   "5303562627530356263753035626475303562657530356266753035"
                   "6330753035633175303563327530356333753035633475303563357"
                   "5303563367530356337753035633875303563397530356361753035"
                   "6362753035636375303563647530356365753035636675303564307"
                   "5303564317530356432753035643375303564347530356435753035"
                   "6436753035643775303564387530356439753035646175303564627"
                   "5303564637530356464753035646575303564667530356530753035"
                   "6531753035653275303565337530356534753035653575303565367"
                   "5303565377530356538753035653975303565617530356562753035"
                   "6563753035656475303565657530356566753035663075303566317"
                   "5303566327530356633753035663475303566357530356636753035"
                   "6637753035663875303566397530356661753035666275303566637"
                   "5303566647530356665753035666675303630307530363031753036"
                   "3032753036303375303630347530363035753036303675303630377"
                   "5303630387530363039753036306175303630627530363063753036"
                   "3064753036306575303630667530363130753036313175303631327"
                   "5303631337530363134753036313575303631367530363137753036"
                   "3138753036313975303631617530363162753036316375303631647"
                   "5303631657530363166753036323075303632317530363232753036"
                   "3233753036323475303632357530363236753036323775303632387"
                   "5303632397530363261753036326275303632637530363264753036"
                   "3265753036326675303633307530363331753036333275303633337"
                   "5303633347530363335753036333675303633377530363338753036"
                   "3339753036336175303633627530363363753036336475303633657"
                   "5303633667530363430753036343175303634327530363433753036"
                   "3434753036343575303634367530363437753036343875303634397"
                   "5303634617530363462753036346375303634647530363465753036"
                   "3466753036353075303635317530363532753036353375303635347"
                   "5303635357530363536753036353775303635387530363539753036"
                   "3561753036356275303635637530363564753036356575303635667"
                   "5303636307530363631753036363275303636337530363634753036"
                   "3635753036363675303636377530363638753036363975303636617"
                   "5303636627530363663753036366475303636657530363666753036"
                   "3730753036373175303637327530363733753036373475303637357"
                   "5303637367530363737753036373875303637397530363761753036"
                   "3762753036376375303637647530363765753036376675303638307"
                   "5303638317530363832753036383375303638347530363835753036"
                   "3836753036383775303638387530363839753036386175303638627"
                   "5303638637530363864753036386575303638667530363930753036"
                   "3931753036393275303639337530363934753036393575303639367"
                   "5303639377530363938753036393975303639617530363962753036"
                   "3963753036396475303639657530363966753036613075303661317"
                   "5303661327530366133753036613475303661357530366136753036"
                   "6137753036613875303661397530366161753036616275303661637"
                   "5303661647530366165753036616675303662307530366231753036"
                   "6232753036623375303662347530366235753036623675303662377"
                   "5303662387530366239753036626175303662627530366263753036"
                   "6264753036626575303662667530366330753036633175303663327"
                   "5303663337530366334753036633575303663367530366337753036"
                   "6338753036633975303663617530366362753036636375303663647"
                   "5303663657530366366753036643075303664317530366432753036"
                   "6433753036643475303664357530366436753036643775303664387"
                   "5303664397530366461753036646275303664637530366464753036"
                   "6465753036646675303665307530366531753036653275303665337"
                   "5303665347530366535753036653675303665377530366538753036"
                   "6539753036656175303665627530366563753036656475303665657"
                   "5303665667530366630753036663175303666327530366633753036"
                   "6634753036663575303666367530366637753036663875303666397"
                   "5303666617530366662753036666375303666647530366665753036"
                   "6666753037303075303730317530373032753037303375303730347"
                   "5303730357530373036753037303775303730387530373039753037"
                   "3061753037306275303730637530373064753037306575303730667"
                   "5303731307530373131753037313275303731337530373134753037"
                   "3135753037313675303731377530373138753037313975303731617"
                   "5303731627530373163753037316475303731657530373166753037"
                   "3230753037323175303732327530373233753037323475303732357"
                   "5303732367530373237753037323875303732397530373261753037"
                   "3262753037326375303732647530373265753037326675303733307"
                   "5303733317530373332753037333375303733347530373335753037"
                   "3336753037333775303733387530373339753037336175303733627"
                   "5303733637530373364753037336575303733667530373430753037"
                   "3431753037343275303734337530373434753037343575303734367"
                   "5303734377530373438753037343975303734617530373462753037"
                   "3463753037346475303734657530373466753037353075303735317"
                   "5303735327530373533753037353475303735357530373536753037"
                   "3537753037353875303735397530373561753037356275303735637"
                   "5303735647530373565753037356675303736307530373631753037"
                   "3632753037363375303736347530373635753037363675303736377"
                   "5303736387530373639753037366175303736627530373663753037"
                   "3664753037366575303736667530373730753037373175303737327"
                   "5303737337530373734753037373575303737367530373737753037"
                   "3738753037373975303737617530373762753037376375303737647"
                   "5303737657530373766753037383075303738317530373832753037"
                   "3833753037383475303738357530373836753037383775303738387"
                   "5303738397530373861753037386275303738637530373864753037"
                   "3865753037386675303739307530373931753037393275303739337"
                   "5303739347530373935753037393675303739377530373938753037"
                   "3939753037396175303739627530373963753037396475303739657"
                   "5303739667530376130753037613175303761327530376133753037"
                   "6134753037613575303761367530376137753037613875303761397"
                   "5303761617530376162753037616375303761647530376165753037"
                   "6166753037623075303762317530376232753037623375303762347"
                   "5303762357530376236753037623775303762387530376239753037"
                   "6261753037626275303762637530376264753037626575303762667"
                   "5303763307530376331753037633275303763337530376334753037"
                   "6335753037633675303763377530376338753037633975303763617"
                   "5303763627530376363753037636475303763657530376366753037"
                   "6430753037643175303764327530376433753037643475303764357"
                   "5303764367530376437753037643875303764397530376461753037"
                   "6462753037646375303764647530376465753037646675303765307"
                   "5303765317530376532753037653375303765347530376535753037"
                   "6536753037653775303765387530376539753037656175303765627"
                   "5303765637530376564753037656575303765667530376630753037"
                   "6631753037663275303766337530376634753037663575303766367"
                   "5303766377530376638753037663975303766617530376662753037"
                   "66637530376664753037666575303766660000011f3c7f9f8335b75"
                   "b77e057f52f32720b57d532af2954af3dcc34216d82ea37f6434f4e"
                   "248c6c7d8da20c7e278026f56ae73f279b30af29d27c884bdc29c83"
                   "d6841")
        self.assertEqual(compare[:-130], txWire[:-130])

    def compareConstructedTX(self):
        #    def test_online(self):
        #        self.maxDiff = None
        op = transactions.Comment(
            **{"parent_author": "",
               "parent_permlink": "",
               "author": "a",
               "permlink": "a",
               "title": "-",
               "body": "".join([chr(i) for i in range(0, 2048)]),
               "json_metadata": {}}
        )
        ops = [transactions.Operation(op)]
        tx = transactions.Signed_Transaction(
            ref_block_num=ref_block_num,
            ref_block_prefix=ref_block_prefix,
            expiration=expiration,
            operations=ops
        )
        tx = tx.sign([wif])
        txWire = hexlify(bytes(tx)).decode("ascii")

        from grapheneapi.grapheneapi import GrapheneAPI
        rpc = GrapheneAPI("localhost", 8092)
        compare = rpc.serialize_transaction(transactions.JsonObj(tx))

        pprint(transactions.JsonObj(tx))

        pprint(tx.toJson())

        print("\n")
        print(compare[:-130])
        print(txWire[:-130])
        print("\n")

        print(txWire[:-130] == compare[:-130])
        self.assertEqual(compare[:-130], txWire[:-130])

if __name__ == '__main__':
    t = Testcases()
    t.compareConstructedTX()
